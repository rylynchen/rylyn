<?php

/**
 * Implements hook_menu().
 */
function demo_add_more_menu() {
  $items['demo/add_more'] = array(
    'title' => 'Demo Add More',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('demo_add_more_form'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Form add more.
 */
function demo_add_more_form($form, &$form_state) {
  $form['fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Favourite'),
    '#prefix' => '<div id="fieldset_wrapper">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
  );
  $form_state['num'] = isset($form_state['num']) ? $form_state['num'] : 1;
  $real_num = isset($form_state['storage']['remove_ids']) ? $form_state['num'] - count($form_state['storage']['remove_ids']) : $form_state['num'];
  
  $form['fieldset']['favourite'] = array(
    '#prefix' => '<div id="fieldset_favourites_wrapper">',
    '#suffix' => '</div>',
    '#tree' => TRUE,
  );
  for ($i = 0; $i < $form_state['num']; $i++) {
    // pass the remove item
    if (isset($form_state['storage']['remove_ids']) && in_array($i, $form_state['storage']['remove_ids'])) {
      continue;
    }
  	$form['fieldset']['favourite'][$i] = array(
	    '#prefix' => '<div class="container-inline">',
	    '#suffix' => '</div>',
      '#tree' => TRUE,
  	);
    $form['fieldset']['favourite'][$i]['favourite'] = array(
      '#type' => 'textfield',
      '#title' => t('Favourite '.$i),
      '#size' => 20,
    );
    if ($real_num > 1) {
  		$form['fieldset']['favourite'][$i]['remove'] = array(
	      '#type' => 'submit',
        '#name' => 'names_fieldset_name_remove'.$i, // important
	      '#value' => t('Remove'),
	      '#submit' => array('demo_add_more_form_remove_submit'),
	      '#ajax' => array(
	        'callback' => 'demo_add_more_form_ajax_callback',
	        'wrapper' => 'fieldset_favourites_wrapper',
	        'progress' => array(
	        	'type' => 'throbber', // set 'none' can hide the throbber
		        'message' => '',
		      ), 
	      ),
  		);
    }
  }
  $form['fieldset']['add'] = array(
    '#type' => 'submit',
    '#value' => t('Add'),
    '#submit' => array('demo_add_more_form_add_submit'),
    '#validate' => array(),
    '#ajax' => array(
      'callback' => 'demo_add_more_form_ajax_callback',
      'wrapper' => 'fieldset_favourites_wrapper',
      'progress' => array(
      	'type' => 'throbber',
        'message' => '',
      ), 
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['#submit'][] = 'demo_add_more_form_submit';
  return $form;
}

/**
 * Submit handler for the "Add" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function demo_add_more_form_add_submit($form, &$form_state) {
  $form_state['num']++;
  $form_state['rebuild'] = TRUE;
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the favourite in it.
 */
function demo_add_more_form_ajax_callback($form, $form_state) {
  return $form['fieldset']['favourite'];
}

/**
 * Submit handler for the "Remove" button.
 *
 * Decrements the max counter and causes a form rebuild.
 */
function demo_add_more_form_remove_submit($form, &$form_state) {
  if ($form_state['num'] > 1) {
    /**
     * You need to check your $form_state['triggering_element']['#parents'] which value save the item key.
     * such as :
     *
     * #parents (Array, 4 elements)
     *  0 (String, 8 characters ) fieldset
     *  1 (String, 9 characters ) favourite
     *  2 (Integer) 1
     *  3 (String, 6 characters ) remove
     *
     * So my item key id is key[2]
     */
    $form_state['storage']['remove_ids'][] = $form_state['triggering_element']['#parents'][2];
  }
  $form_state['rebuild'] = TRUE;
}

/**
 * Submit handler for demo_add_more_form.
 */
function demo_add_more_form_submit($form, &$form_state) {
  $msg = t('Your favourite :');
  $favourite = array();
  $items = array();
  foreach ($form_state['values']['fieldset']['favourite'] as $key => $val) {
    $items[] = t('key is %key, value is %val', array('%key' => $key, '%val' => $val['favourite']));
  }
  $msg .= theme('item_list', array('items' => $items));
  drupal_set_message($msg);
}